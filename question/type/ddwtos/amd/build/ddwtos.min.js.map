{"version":3,"sources":["../src/ddwtos.js"],"names":["define","$","dragDrop","keys","DragDropToTextQuestion","containerId","readOnly","getRoot","addClass","cloneDrags","positionDrags","prototype","setElementSize","element","width","height","css","thisQ","find","each","index","draghome","drag","placeHolder","clone","removeClass","getChoice","getGroup","before","root","not","i","dragNode","currentPlace","getClassnameNumericSuffix","removeAttr","inputNode","input","choice","val","place","getPlace","drop","dropPosition","offset","data","top","left","unplacedDrag","getUnplacedChoice","hiddenDrag","getDragClone","length","sendDragToDrop","handleDragStart","e","target","closest","info","prepare","start","setInputValue","hiddenDrop","getDrop","hasClass","noOfDrags","noOfDropsInGroup","getInfiniteDragClones","cloneDrag","after","x","y","dragMove","dragEnd","pageX","pageY","pointInDrop","dropNode","isPointInDrop","placed","placedNode","placedDrag","sendDragHome","oldDrag","getCurrentDragInPlace","focus","attr","animateTo","getDragHome","handleKeyPress","currentDrag","nextDrag","keyCode","space","arrowRight","arrowDown","getNextDrag","arrowLeft","arrowUp","getPreviousDrag","escape","preventDefault","group","numChoices","noOfChoicesInGroup","next","previous","currentPos","targetPos","M","util","js_pending","animate","parseInt","duration","done","trigger","js_complete","position","document","getElementById","is","slice","node","prefix","classes","classesArr","split","patt1","RegExp","test","patt2","match","exec","inHome","questionManager","eventHandlersInitialised","questions","init","setupEventHandlers","on","handleDragMoved","question","getQuestionForEvent","currentTarget","removeData","setTimeout","first","remove"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript to make drag-drop into text questions work.\n *\n * Some vocabulary to help understand this code:\n *\n * The question text contains 'drops' - blanks into which the 'drags', the missing\n * words, can be put.\n *\n * The thing that can be moved into the drops are called 'drags'. There may be\n * multiple copies of the 'same' drag which does not really cause problems.\n * Each drag has a 'choice' number which is the value set on the drop's hidden\n * input when this drag is placed in a drop.\n *\n * These may be in separate 'groups', distinguished by colour.\n * Things can only interact with other things in the same group.\n * The groups are numbered from 1.\n *\n * The place where a given drag started from is called its 'home'.\n *\n * @module     qtype_ddwtos/ddwtos\n * @package    qtype_ddwtos\n * @copyright  2018 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.6\n */\ndefine(['jquery', 'core/dragdrop', 'core/key_codes'], function($, dragDrop, keys) {\n\n    \"use strict\";\n\n    /**\n     * Object to handle one drag-drop into text question.\n     *\n     * @param {String} containerId id of the outer div for this question.\n     * @param {boolean} readOnly whether the question is being displayed read-only.\n     * @constructor\n     */\n    function DragDropToTextQuestion(containerId, readOnly) {\n        this.containerId = containerId;\n        if (readOnly) {\n            this.getRoot().addClass('qtype_ddwtos-readonly');\n        }\n        this.cloneDrags();\n        this.positionDrags();\n    }\n\n    /**\n     * Set a given DOM element to be a particular size.\n     *\n     * @param {HTMLElement} element\n     * @param {int} width\n     * @param {int} height\n     */\n    DragDropToTextQuestion.prototype.setElementSize = function(element, width, height) {\n        $(element).width(width).height(height).css('lineHeight', height + 'px');\n    };\n\n    /**\n     * Invisible 'drag homes' are output by the renderer. These have the same properties\n     * as the drag items but are invisible. We clone these invisible elements to make the\n     * actual drag items.\n     */\n    DragDropToTextQuestion.prototype.cloneDrags = function() {\n        var thisQ = this;\n        thisQ.getRoot().find('span.draghome').each(function(index, draghome) {\n            var drag = $(draghome);\n            var placeHolder = drag.clone();\n            placeHolder.removeClass();\n            placeHolder.addClass('draghome choice' +\n                thisQ.getChoice(drag) + ' group' +\n                thisQ.getGroup(drag) + ' dragplaceholder');\n            drag.before(placeHolder);\n        });\n    };\n\n    /**\n     * Update the position of drags.\n     */\n    DragDropToTextQuestion.prototype.positionDrags = function() {\n        var thisQ = this,\n            root = this.getRoot();\n\n        // First move all items back home.\n        root.find('span.draghome').not('.dragplaceholder').each(function(i, dragNode) {\n            var drag = $(dragNode),\n                currentPlace = thisQ.getClassnameNumericSuffix(drag, 'inplace');\n            drag.addClass('unplaced')\n                .removeClass('placed');\n            drag.removeAttr('tabindex');\n            if (currentPlace !== null) {\n                drag.removeClass('inplace' + currentPlace);\n            }\n        });\n\n        // Then place the once that should be placed.\n        root.find('input.placeinput').each(function(i, inputNode) {\n            var input = $(inputNode),\n                choice = input.val(),\n                place = thisQ.getPlace(input);\n\n            // Record the last known position of the drop.\n            var drop = root.find('.drop.place' + place),\n                dropPosition = drop.offset();\n            drop.data('prev-top', dropPosition.top).data('prev-left', dropPosition.left);\n\n            if (choice === '0') {\n                // No item in this place.\n                return;\n            }\n\n            // Get the unplaced drag.\n            var unplacedDrag = thisQ.getUnplacedChoice(thisQ.getGroup(input), choice);\n            // Get the clone of the drag.\n            var hiddenDrag = thisQ.getDragClone(unplacedDrag);\n            if (hiddenDrag.length) {\n                hiddenDrag.addClass('active');\n            }\n            // Send the drag to drop.\n            thisQ.sendDragToDrop(thisQ.getUnplacedChoice(thisQ.getGroup(input), choice), drop);\n        });\n    };\n\n    /**\n     * Handles the start of dragging an item.\n     *\n     * @param {Event} e the touch start or mouse down event.\n     */\n    DragDropToTextQuestion.prototype.handleDragStart = function(e) {\n        var thisQ = this,\n            drag = $(e.target).closest('.draghome');\n\n        var info = dragDrop.prepare(e);\n        if (!info.start) {\n            return;\n        }\n\n        drag.addClass('beingdragged');\n        var currentPlace = this.getClassnameNumericSuffix(drag, 'inplace');\n        if (currentPlace !== null) {\n            this.setInputValue(currentPlace, 0);\n            drag.removeClass('inplace' + currentPlace);\n            var hiddenDrop = thisQ.getDrop(drag, currentPlace);\n            if (hiddenDrop.length) {\n                hiddenDrop.addClass('active');\n                drag.offset(hiddenDrop.offset());\n            }\n        } else {\n            var hiddenDrag = thisQ.getDragClone(drag);\n            if (hiddenDrag.length) {\n                if (drag.hasClass('infinite')) {\n                    var noOfDrags = this.noOfDropsInGroup(this.getGroup(drag));\n                    var cloneDrags = this.getInfiniteDragClones(drag, false);\n                    if (cloneDrags.length < noOfDrags) {\n                        var cloneDrag = drag.clone();\n                        cloneDrag.removeClass('beingdragged');\n                        hiddenDrag.after(cloneDrag);\n                        drag.offset(cloneDrag.offset());\n                    } else {\n                        hiddenDrag.addClass('active');\n                        drag.offset(hiddenDrag.offset());\n                    }\n                } else {\n                    hiddenDrag.addClass('active');\n                    drag.offset(hiddenDrag.offset());\n                }\n            }\n        }\n\n        dragDrop.start(e, drag, function(x, y, drag) {\n            thisQ.dragMove(x, y, drag);\n        }, function(x, y, drag) {\n            thisQ.dragEnd(x, y, drag);\n        });\n    };\n\n    /**\n     * Called whenever the currently dragged items moves.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.dragMove = function(pageX, pageY, drag) {\n        var thisQ = this,\n            pointInDrop = false;\n\n        this.getRoot().find('span.drop.group' + this.getGroup(drag)).each(function(i, dropNode) {\n            var drop = $(dropNode);\n            if (thisQ.isPointInDrop(pageX, pageY, drop)) {\n                drop.addClass('valid-drag-over-drop');\n                pointInDrop = true;\n            } else {\n                drop.removeClass('valid-drag-over-drop');\n            }\n            if (pointInDrop) {\n                drag.addClass('drag-over-valid-drop');\n                drag.offset({ top: pageY, left: pageX });\n            } else {\n                drag.removeClass('drag-over-valid-drop');\n                drag.offset({ top: pageY, left: pageX });\n            }\n        });\n        this.getRoot().find('span.draghome.placed.group' + this.getGroup(drag)).not('.beingdragged').each(function(i, dropNode) {\n            var drop = $(dropNode);\n            if (thisQ.isPointInDrop(pageX, pageY, drop)) {\n                drop.addClass('valid-drag-over-drop');\n            } else {\n                drop.removeClass('valid-drag-over-drop');\n            }\n        });\n    };\n\n    /**\n     * Called when user drops a drag item.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.dragEnd = function(pageX, pageY, drag) {\n        var thisQ = this,\n            root = this.getRoot(),\n            placed = false;\n        root.find('span.drop.group' + this.getGroup(drag)).each(function(i, dropNode) {\n            var drop = $(dropNode);\n            if (!thisQ.isPointInDrop(pageX, pageY, drop)) {\n                // Not this drop.\n                return true;\n            }\n\n            // Now put this drag into the drop.\n            drop.removeClass('valid-drag-over-drop');\n            thisQ.sendDragToDrop(drag, drop);\n            placed = true;\n            return false; // Stop the each() here.\n        });\n\n        root.find('span.draghome.placed.group' + this.getGroup(drag)).not('.beingdragged').each(function(i, placedNode) {\n            var placedDrag = $(placedNode);\n            if (!thisQ.isPointInDrop(pageX, pageY, placedDrag)) {\n                // Not this placed drag.\n                return true;\n            }\n\n            // Now put this drag into the drop.\n            placedDrag.removeClass('valid-drag-over-drop');\n            var currentPlace = thisQ.getClassnameNumericSuffix(placedDrag, 'inplace');\n            var drop = thisQ.getDrop(drag, currentPlace);\n            thisQ.sendDragToDrop(drag, drop);\n            placed = true;\n            return false; // Stop the each() here.\n        });\n\n        if (!placed) {\n            this.sendDragHome(drag);\n        }\n    };\n\n    /**\n     * Animate a drag item into a given place (or back home).\n     *\n     * @param {jQuery|null} drag the item to place. If null, clear the place.\n     * @param {jQuery} drop the place to put it.\n     */\n    DragDropToTextQuestion.prototype.sendDragToDrop = function(drag, drop) {\n        // Is there already a drag in this drop? if so, evict it.\n        var oldDrag = this.getCurrentDragInPlace(this.getPlace(drop));\n        if (oldDrag.length !== 0) {\n            oldDrag.addClass('beingdragged');\n            oldDrag.offset(oldDrag.offset());\n            var currentPlace = this.getClassnameNumericSuffix(oldDrag, 'inplace');\n            var hiddenDrop = this.getDrop(oldDrag, currentPlace);\n            hiddenDrop.addClass('active');\n            this.sendDragHome(oldDrag);\n        }\n\n        if (drag.length === 0) {\n            this.setInputValue(this.getPlace(drop), 0);\n            if (drop.data('isfocus')) {\n                drop.focus();\n            }\n        } else {\n            this.setInputValue(this.getPlace(drop), this.getChoice(drag));\n            drag.removeClass('unplaced')\n                .addClass('placed inplace' + this.getPlace(drop));\n            drag.attr('tabindex', 0);\n            this.animateTo(drag, drop);\n        }\n    };\n\n    /**\n     * Animate a drag back to its home.\n     *\n     * @param {jQuery} drag the item being moved.\n     */\n    DragDropToTextQuestion.prototype.sendDragHome = function(drag) {\n        var currentPlace = this.getClassnameNumericSuffix(drag, 'inplace');\n        if (currentPlace !== null) {\n            drag.removeClass('inplace' + currentPlace);\n        }\n        drag.data('unplaced', true);\n\n        this.animateTo(drag, this.getDragHome(this.getGroup(drag), this.getChoice(drag)));\n    };\n\n    /**\n     * Handles keyboard events on drops.\n     *\n     * Drops are focusable. Once focused, right/down/space switches to the next choice, and\n     * left/up switches to the previous. Escape clear.\n     *\n     * @param {KeyboardEvent} e\n     */\n    DragDropToTextQuestion.prototype.handleKeyPress = function(e) {\n        var drop = $(e.target).closest('.drop');\n        if (drop.length === 0) {\n            var placedDrag = $(e.target);\n            var currentPlace = this.getClassnameNumericSuffix(placedDrag, 'inplace');\n            if (currentPlace !== null) {\n                drop = this.getDrop(placedDrag, currentPlace);\n            }\n        }\n        var currentDrag = this.getCurrentDragInPlace(this.getPlace(drop)),\n            nextDrag = $();\n\n        switch (e.keyCode) {\n            case keys.space:\n            case keys.arrowRight:\n            case keys.arrowDown:\n                nextDrag = this.getNextDrag(this.getGroup(drop), currentDrag);\n                break;\n\n            case keys.arrowLeft:\n            case keys.arrowUp:\n                nextDrag = this.getPreviousDrag(this.getGroup(drop), currentDrag);\n                break;\n\n            case keys.escape:\n                break;\n\n            default:\n                return; // To avoid the preventDefault below.\n        }\n\n        if (nextDrag.length) {\n            nextDrag.data('isfocus', true);\n        } else {\n            drop.data('isfocus', true);\n        }\n\n        e.preventDefault();\n        this.sendDragToDrop(nextDrag, drop);\n    };\n\n    /**\n     * Choose the next drag in a group.\n     *\n     * @param {int} group which group.\n     * @param {jQuery} drag current choice (empty jQuery if there isn't one).\n     * @return {jQuery} the next drag in that group, or null if there wasn't one.\n     */\n    DragDropToTextQuestion.prototype.getNextDrag = function(group, drag) {\n        var choice,\n            numChoices = this.noOfChoicesInGroup(group);\n\n        if (drag.length === 0) {\n            choice = 1; // Was empty, so we want to select the first choice.\n        } else {\n            choice = this.getChoice(drag) + 1;\n        }\n\n        var next = this.getUnplacedChoice(group, choice);\n        while (next.length === 0 && choice < numChoices) {\n            choice++;\n            next = this.getUnplacedChoice(group, choice);\n        }\n\n        return next;\n    };\n\n    /**\n     * Choose the previous drag in a group.\n     *\n     * @param {int} group which group.\n     * @param {jQuery} drag current choice (empty jQuery if there isn't one).\n     * @return {jQuery} the next drag in that group, or null if there wasn't one.\n     */\n    DragDropToTextQuestion.prototype.getPreviousDrag = function(group, drag) {\n        var choice;\n\n        if (drag.length === 0) {\n            choice = this.noOfChoicesInGroup(group);\n        } else {\n            choice = this.getChoice(drag) - 1;\n        }\n\n        var previous = this.getUnplacedChoice(group, choice);\n        while (previous.length === 0 && choice > 1) {\n            choice--;\n            previous = this.getUnplacedChoice(group, choice);\n        }\n\n        // Does this choice exist?\n        return previous;\n    };\n\n    /**\n     * Animate an object to the given destination.\n     *\n     * @param {jQuery} drag the element to be animated.\n     * @param {jQuery} target element marking the place to move it to.\n     */\n    DragDropToTextQuestion.prototype.animateTo = function(drag, target) {\n        var currentPos = drag.offset(),\n            targetPos = target.offset(),\n            thisQ = this;\n\n        M.util.js_pending('qtype_ddwtos-animate-' + thisQ.containerId);\n        // Animate works in terms of CSS position, whereas locating an object\n        // on the page works best with jQuery offset() function. So, to get\n        // the right target position, we work out the required change in\n        // offset() and then add that to the current CSS position.\n        drag.animate(\n            {\n                left: parseInt(drag.css('left')) + targetPos.left - currentPos.left,\n                top: parseInt(drag.css('top')) + targetPos.top - currentPos.top\n            },\n            {\n                duration: 'fast',\n                done: function() {\n                    $('body').trigger('dragmoved', [drag, target, thisQ]);\n                    M.util.js_complete('qtype_ddwtos-animate-' + thisQ.containerId);\n                }\n            }\n        );\n    };\n\n    /**\n     * Detect if a point is inside a given DOM node.\n     *\n     * @param {Number} pageX the x position.\n     * @param {Number} pageY the y position.\n     * @param {jQuery} drop the node to check (typically a drop).\n     * @return {boolean} whether the point is inside the node.\n     */\n    DragDropToTextQuestion.prototype.isPointInDrop = function(pageX, pageY, drop) {\n        var position = drop.offset();\n        return pageX >= position.left && pageX < position.left + drop.width()\n                && pageY >= position.top && pageY < position.top + drop.height();\n    };\n\n    /**\n     * Set the value of the hidden input for a place, to record what is currently there.\n     *\n     * @param {int} place which place to set the input value for.\n     * @param {int} choice the value to set.\n     */\n    DragDropToTextQuestion.prototype.setInputValue = function(place, choice) {\n        this.getRoot().find('input.placeinput.place' + place).val(choice);\n    };\n\n    /**\n     * Get the outer div for this question.\n     *\n     * @returns {jQuery} containing that div.\n     */\n    DragDropToTextQuestion.prototype.getRoot = function() {\n        return $(document.getElementById(this.containerId));\n    };\n\n    /**\n     * Get drag home for a given choice.\n     *\n     * @param {int} group the group.\n     * @param {int} choice the choice number.\n     * @returns {jQuery} containing that div.\n     */\n    DragDropToTextQuestion.prototype.getDragHome = function(group, choice) {\n        if (!this.getRoot().find('.draghome.dragplaceholder.group' + group + '.choice' + choice).is(':visible')) {\n            return this.getRoot().find('.draggrouphomes' + group +\n                ' span.draghome.infinite' +\n                '.choice' + choice +\n                '.group' + group);\n        }\n        return this.getRoot().find('.draghome.dragplaceholder.group' + group + '.choice' + choice);\n    };\n\n    /**\n     * Get an unplaced choice for a particular group.\n     *\n     * @param {int} group the group.\n     * @param {int} choice the choice number.\n     * @returns {jQuery} jQuery wrapping the unplaced choice. If there isn't one, the jQuery will be empty.\n     */\n    DragDropToTextQuestion.prototype.getUnplacedChoice = function(group, choice) {\n        return this.getRoot().find('.draghome.group' + group + '.choice' + choice + '.unplaced').slice(0, 1);\n    };\n\n    /**\n     * Get the drag that is currently in a given place.\n     *\n     * @param {int} place the place number.\n     * @return {jQuery} the current drag (or an empty jQuery if none).\n     */\n    DragDropToTextQuestion.prototype.getCurrentDragInPlace = function(place) {\n        return this.getRoot().find('span.draghome.inplace' + place);\n    };\n\n    /**\n     * Return the number of blanks in a given group.\n     *\n     * @param {int} group the group number.\n     * @returns {int} the number of drops.\n     */\n    DragDropToTextQuestion.prototype.noOfDropsInGroup = function(group) {\n        return this.getRoot().find('.drop.group' + group).length;\n    };\n\n    /**\n     * Return the number of choices in a given group.\n     *\n     * @param {int} group the group number.\n     * @returns {int} the number of choices.\n     */\n    DragDropToTextQuestion.prototype.noOfChoicesInGroup = function(group) {\n        return this.getRoot().find('.draghome.group' + group).length;\n    };\n\n    /**\n     * Return the number at the end of the CSS class name with the given prefix.\n     *\n     * @param {jQuery} node\n     * @param {String} prefix name prefix\n     * @returns {Number|null} the suffix if found, else null.\n     */\n    DragDropToTextQuestion.prototype.getClassnameNumericSuffix = function(node, prefix) {\n        var classes = node.attr('class');\n        if (classes !== '') {\n            var classesArr = classes.split(' ');\n            for (var index = 0; index < classesArr.length; index++) {\n                var patt1 = new RegExp('^' + prefix + '([0-9])+$');\n                if (patt1.test(classesArr[index])) {\n                    var patt2 = new RegExp('([0-9])+$');\n                    var match = patt2.exec(classesArr[index]);\n                    return Number(match[0]);\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Get the choice number of a drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {Number} the choice number.\n     */\n    DragDropToTextQuestion.prototype.getChoice = function(drag) {\n        return this.getClassnameNumericSuffix(drag, 'choice');\n    };\n\n    /**\n     * Given a DOM node that is significant to this question\n     * (drag, drop, ...) get the group it belongs to.\n     *\n     * @param {jQuery} node a DOM node.\n     * @returns {Number} the group it belongs to.\n     */\n    DragDropToTextQuestion.prototype.getGroup = function(node) {\n        return this.getClassnameNumericSuffix(node, 'group');\n    };\n\n    /**\n     * Get the place number of a drop, or its corresponding hidden input.\n     *\n     * @param {jQuery} node the DOM node.\n     * @returns {Number} the place number.\n     */\n    DragDropToTextQuestion.prototype.getPlace = function(node) {\n        return this.getClassnameNumericSuffix(node, 'place');\n    };\n\n    /**\n     * Get drag clone for a given drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @returns {jQuery} the drag's clone.\n     */\n    DragDropToTextQuestion.prototype.getDragClone = function(drag) {\n        return this.getRoot().find('.draggrouphomes' +\n            this.getGroup(drag) +\n            ' span.draghome' +\n            '.choice' + this.getChoice(drag) +\n            '.group' + this.getGroup(drag) +\n            '.dragplaceholder');\n    };\n\n    /**\n     * Get infinite drag clones for given drag.\n     *\n     * @param {jQuery} drag the drag.\n     * @param {Boolean} inHome in the home area or not.\n     * @returns {jQuery} the drag's clones.\n     */\n    DragDropToTextQuestion.prototype.getInfiniteDragClones = function(drag, inHome) {\n        if (inHome) {\n            return this.getRoot().find('.draggrouphomes' +\n                this.getGroup(drag) +\n                ' span.draghome' +\n                '.choice' + this.getChoice(drag) +\n                '.group' + this.getGroup(drag) +\n                '.infinite').not('.dragplaceholder');\n        }\n        return this.getRoot().find('span.draghome' +\n            '.choice' + this.getChoice(drag) +\n            '.group' + this.getGroup(drag) +\n            '.infinite').not('.dragplaceholder');\n    };\n\n    /**\n     * Get drop for a given drag and place.\n     *\n     * @param {jQuery} drag the drag.\n     * @param {Integer} currentPlace the current place of drag.\n     * @returns {jQuery} the drop's clone.\n     */\n    DragDropToTextQuestion.prototype.getDrop = function(drag, currentPlace) {\n        return this.getRoot().find('.drop.group' + this.getGroup(drag) + '.place' + currentPlace);\n    };\n\n    /**\n     * Singleton that tracks all the DragDropToTextQuestions on this page, and deals\n     * with event dispatching.\n     *\n     * @type {Object}\n     */\n    var questionManager = {\n        /**\n         * {boolean} used to ensure the event handlers are only initialised once per page.\n         */\n        eventHandlersInitialised: false,\n\n        /**\n         * {DragDropToTextQuestion[]} all the questions on this page, indexed by containerId (id on the .que div).\n         */\n        questions: {},\n\n        /**\n         * Initialise questions.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         */\n        init: function(containerId, readOnly) {\n            questionManager.questions[containerId] = new DragDropToTextQuestion(containerId, readOnly);\n            if (!questionManager.eventHandlersInitialised) {\n                questionManager.setupEventHandlers();\n                questionManager.eventHandlersInitialised = true;\n            }\n        },\n\n        /**\n         * Set up the event handlers that make this question type work. (Done once per page.)\n         */\n        setupEventHandlers: function() {\n            $('body').on('mousedown touchstart',\n                '.que.ddwtos:not(.qtype_ddwtos-readonly) span.draghome',\n                questionManager.handleDragStart)\n                .on('keydown',\n                    '.que.ddwtos:not(.qtype_ddwtos-readonly) span.drop',\n                    questionManager.handleKeyPress)\n                .on('keydown',\n                    '.que.ddwtos:not(.qtype_ddwtos-readonly) span.draghome.placed:not(.beingdragged)',\n                    questionManager.handleKeyPress)\n                .on('dragmoved', questionManager.handleDragMoved);\n        },\n\n        /**\n         * Handle mouse down / touch start on drags.\n         * @param {Event} e the DOM event.\n         */\n        handleDragStart: function(e) {\n            e.preventDefault();\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleDragStart(e);\n            }\n        },\n\n        /**\n         * Handle key down / press on drops.\n         * @param {KeyboardEvent} e\n         */\n        handleKeyPress: function(e) {\n            var question = questionManager.getQuestionForEvent(e);\n            if (question) {\n                question.handleKeyPress(e);\n            }\n        },\n\n        /**\n         * Given an event, work out which question it affects.\n         *\n         * @param {Event} e the event.\n         * @returns {DragDropToTextQuestion|undefined} The question, or undefined.\n         */\n        getQuestionForEvent: function(e) {\n            var containerId = $(e.currentTarget).closest('.que.ddwtos').attr('id');\n            return questionManager.questions[containerId];\n        },\n\n        /**\n         * Handle when drag moved.\n         *\n         * @param {Event} e the event.\n         * @param {jQuery} drag the drag\n         * @param {jQuery} target the target\n         * @param {DragDropToTextQuestion} thisQ the question.\n         */\n        handleDragMoved: function(e, drag, target, thisQ) {\n            drag.removeClass('beingdragged');\n            drag.css('top', '').css('left', '');\n            target.after(drag);\n            target.removeClass('active');\n            if (typeof drag.data('unplaced') !== 'undefined' && drag.data('unplaced') === true) {\n                drag.removeClass('placed').addClass('unplaced');\n                drag.removeAttr('tabindex');\n                drag.removeData('unplaced');\n                if (drag.hasClass('infinite') && thisQ.getInfiniteDragClones(drag, true).length > 1) {\n                    setTimeout(function() {\n                        thisQ.getInfiniteDragClones(drag, true).first().remove();\n                    });\n                }\n            }\n            if (typeof drag.data('isfocus') !== 'undefined' && drag.data('isfocus') === true) {\n                var hiddenDrag = thisQ.getDragClone(drag);\n                if (hiddenDrag.length) {\n                    if (drag.hasClass('infinite')) {\n                        var noOfDrags = thisQ.noOfDropsInGroup(thisQ.getGroup(drag));\n                        var cloneDrags = thisQ.getInfiniteDragClones(drag, false);\n                        if (cloneDrags.length < noOfDrags) {\n                            var cloneDrag = drag.clone();\n                            cloneDrag.removeClass('beingdragged');\n                            cloneDrag.removeAttr('tabindex');\n                            hiddenDrag.after(cloneDrag);\n                        } else {\n                            hiddenDrag.addClass('active');\n                        }\n                    } else {\n                        hiddenDrag.addClass('active');\n                    }\n                }\n                drag.focus();\n                drag.removeData('isfocus');\n            }\n            if (typeof target.data('isfocus') !== 'undefined' && target.data('isfocus') === true) {\n                target.removeData('isfocus');\n            }\n        }\n    };\n\n    /**\n     * @alias module:qtype_ddwtos/ddwtos\n     */\n    return {\n        /**\n         * Initialise one drag-drop into text question.\n         *\n         * @param {String} containerId id of the outer div for this question.\n         * @param {boolean} readOnly whether the question is being displayed read-only.\n         */\n        init: questionManager.init\n    };\n});\n"],"file":"ddwtos.min.js"}